package com.aimage.domain.image.service;

import com.aimage.domain.image.dto.ImageDto;
import com.theokanning.openai.OpenAiHttpException;
import com.theokanning.openai.image.CreateImageRequest;
import com.theokanning.openai.service.OpenAiService;
import org.springframework.beans.factory.annotation.Value;

//@Service
public class OpenAiExternalService implements OpenAiClientService {

    @Value("${openai-key}")
    private String OPENAI_KEY;

    /**
     * Library used: openai-java by Theo Kanning
     *
     * @param imageForm Image form which contains details (prompt, size) of an image to request for
     * @return An Image URL generated by OpenAI image model.
     * @throws OpenAiHttpException (RuntimeException) if there is any problem with API request
     */
    @Override
    public String requestImage(ImageDto imageForm) throws OpenAiHttpException {
        OpenAiService service = new OpenAiService(OPENAI_KEY);
        CreateImageRequest createImageRequest = CreateImageRequest.builder()
                .prompt(imageForm.getPrompt())
                .n(1)
                .size(imageForm.getSize())
                .build();

        return service.createImage(createImageRequest)
                .getData()
                .get(0)
                .getUrl();
    }
}
