plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
//	id 'org.asciidoctor.convert' version '2.4.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/snippets"))
}

asciidoctor {
	sourceDir 'src/doc/asciidoc'
	attributes \
      'snippets': file('build/snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// openai-java by Theo Kanning
	implementation 'com.theokanning.openai-gpt3-java:service:+'
	// WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Springdoc (for Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Spring REST Doc
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// JdbcTemplate 추가
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// MyBatis 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:+'
	// H2 데이터베이스 추가
	runtimeOnly 'com.h2database:h2'
	// MySQL 추가
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}